"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var pluralize = require("pluralize");
var auth_1 = require("./../auth");
var utils_1 = require("./../utils");
/**
 * Lists a script's deployments.
 */
exports.default = (function () { return __awaiter(_this, void 0, void 0, function () {
    var scriptId, deployments, deploymentsList, numDeployments, deploymentWord;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, utils_1.checkIfOnline()];
            case 1:
                _a.sent();
                return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 2:
                _a.sent();
                return [4 /*yield*/, utils_1.getProjectSettings()];
            case 3:
                scriptId = (_a.sent()).scriptId;
                if (!scriptId)
                    return [2 /*return*/];
                utils_1.spinner.setSpinnerTitle(utils_1.LOG.DEPLOYMENT_LIST(scriptId)).start();
                return [4 /*yield*/, auth_1.script.projects.deployments.list({
                        scriptId: scriptId,
                    })];
            case 4:
                deployments = _a.sent();
                utils_1.spinner.stop(true);
                if (deployments.status !== 200) {
                    return [2 /*return*/, utils_1.logError(deployments.statusText)];
                }
                deploymentsList = deployments.data.deployments || [];
                numDeployments = deploymentsList.length;
                deploymentWord = pluralize('Deployment', numDeployments);
                console.log(numDeployments + " " + deploymentWord + ".");
                deploymentsList.map(function (_a) {
                    var deploymentId = _a.deploymentId, deploymentConfig = _a.deploymentConfig;
                    if (!deploymentId || !deploymentConfig)
                        return; // fix ts errors
                    var versionString = !!deploymentConfig.versionNumber ? "@" + deploymentConfig.versionNumber : '@HEAD';
                    var description = deploymentConfig.description ? '- ' + deploymentConfig.description : '';
                    console.log("- " + deploymentId + " " + versionString + " " + description);
                });
                return [2 /*return*/];
        }
    });
}); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95bWVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZXBsb3ltZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQkF5Q0E7O0FBeENBLHFDQUF1QztBQUN2QyxrQ0FHbUI7QUFDbkIsb0NBTW9CO0FBRXBCOztHQUVHO0FBQ0gsbUJBQWU7Ozs7b0JBQ2IscUJBQU0scUJBQWEsRUFBRSxFQUFBOztnQkFBckIsU0FBcUIsQ0FBQztnQkFDdEIscUJBQU0seUJBQWtCLEVBQUUsRUFBQTs7Z0JBQTFCLFNBQTBCLENBQUM7Z0JBQ04scUJBQU0sMEJBQWtCLEVBQUUsRUFBQTs7Z0JBQXZDLFFBQVEsR0FBSyxDQUFBLFNBQTBCLENBQUEsU0FBL0I7Z0JBQ2hCLElBQUksQ0FBQyxRQUFRO29CQUFFLHNCQUFPO2dCQUN0QixlQUFPLENBQUMsZUFBZSxDQUFDLFdBQUcsQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDM0MscUJBQU0sYUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO3dCQUN6RCxRQUFRLFVBQUE7cUJBQ1QsQ0FBQyxFQUFBOztnQkFGSSxXQUFXLEdBQUcsU0FFbEI7Z0JBQ0YsZUFBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbkIsSUFBSSxXQUFXLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRTtvQkFDOUIsc0JBQU8sZ0JBQVEsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLEVBQUM7aUJBQ3pDO2dCQUNLLGVBQWUsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxFQUFFLENBQUM7Z0JBQ3JELGNBQWMsR0FBRyxlQUFlLENBQUMsTUFBTSxDQUFDO2dCQUN4QyxjQUFjLEdBQUcsU0FBUyxDQUFDLFlBQVksRUFBRSxjQUFjLENBQUMsQ0FBQztnQkFDL0QsT0FBTyxDQUFDLEdBQUcsQ0FBSSxjQUFjLFNBQUksY0FBYyxNQUFHLENBQUMsQ0FBQztnQkFDcEQsZUFBZSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEVBQStEO3dCQUE3RCw4QkFBWSxFQUFFLHNDQUFnQjtvQkFDbkQsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLGdCQUFnQjt3QkFBRSxPQUFPLENBQUMsZ0JBQWdCO29CQUNoRSxJQUFNLGFBQWEsR0FBRyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxNQUFJLGdCQUFnQixDQUFDLGFBQWUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO29CQUN4RyxJQUFNLFdBQVcsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztvQkFDNUYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFLLFlBQVksU0FBSSxhQUFhLFNBQUksV0FBYSxDQUFDLENBQUM7Z0JBQ25FLENBQUMsQ0FBQyxDQUFDOzs7O0tBQ0osRUFBQyJ9