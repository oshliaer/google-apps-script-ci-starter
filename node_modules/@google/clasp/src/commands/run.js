"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var chalk_1 = require("chalk");
var pluralize = require("pluralize");
var apiutils_1 = require("../apiutils");
var auth_1 = require("../auth");
var manifest_1 = require("../manifest");
var urls_1 = require("../urls");
var utils_1 = require("../utils");
/**
 * Executes an Apps Script function. Requires clasp login --creds.
 * @param functionName {string} The function name within the Apps Script project.
 * @param cmd.nondev {boolean} If we want to run the last deployed version vs the latest code.
 * @see https://developers.google.com/apps-script/api/how-tos/execute
 * @requires `clasp login --creds` to be run beforehand.
 */
exports.default = (function (functionName, cmd) { return __awaiter(_this, void 0, void 0, function () {
    function IsValidJSONString(str) {
        try {
            JSON.parse(str);
        }
        catch (error) {
            throw new Error('Error: Input params not Valid JSON string. Please fix and try again');
        }
        return true;
    }
    /**
     * Runs a function.
     * @see https://developers.google.com/apps-script/api/reference/rest/v1/scripts/run#response-body
     */
    function runFunction(functionName, params) {
        return __awaiter(this, void 0, void 0, function () {
            var localScript, res, data, err_1, readline, scopes_1, rl_1;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 4, , 5]);
                        // Load local credentials.
                        return [4 /*yield*/, auth_1.loadAPICredentials(true)];
                    case 1:
                        // Load local credentials.
                        _a.sent();
                        return [4 /*yield*/, auth_1.getLocalScript()];
                    case 2:
                        localScript = _a.sent();
                        utils_1.spinner.setSpinnerTitle("Running function: " + functionName).start();
                        return [4 /*yield*/, localScript.scripts.run({
                                scriptId: scriptId,
                                requestBody: {
                                    function: functionName,
                                    parameters: params,
                                    devMode: devMode,
                                },
                            })];
                    case 3:
                        res = _a.sent();
                        utils_1.spinner.stop(true);
                        if (!res || !res.data.done) {
                            utils_1.logError(null, utils_1.ERROR.RUN_NODATA);
                            process.exit(0); // exit gracefully in case localhost server spun up for authorize
                        }
                        data = res.data;
                        // @see https://developers.google.com/apps-script/api/reference/rest/v1/scripts/run#response-body
                        if (data.response) {
                            if (data.response.result) {
                                console.log(data.response.result);
                            }
                            else {
                                console.log(chalk_1.default.red('No response.'));
                            }
                        }
                        else if (data.error && data.error.details) {
                            // @see https://developers.google.com/apps-script/api/reference/rest/v1/scripts/run#Status
                            console.error("" + chalk_1.default.red('Exception:'), data.error.details[0].errorType, data.error.details[0].errorMessage, data.error.details[0].scriptStackTraceElements || []);
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        err_1 = _a.sent();
                        utils_1.spinner.stop(true);
                        if (err_1) {
                            // TODO move these to logError when stable?
                            switch (err_1.code) {
                                case 401:
                                    // The 401 is probably due to this error:
                                    // "Error: Local client credentials unauthenticated. Check scopes/authorization.""
                                    // This is probably due to the OAuth client not having authorized scopes.
                                    console.log("" +
                                        ("Hey! It looks like you aren't authenticated for the scopes required by this script.\nPlease enter the scopes by doing the following:\n1. Open Your Script: " + urls_1.URL.SCRIPT(scriptId) + "\n2. File > Project Properties > Scopes\n3. Copy/Paste the list of scopes here:\n              ~ Example ~\nhttps://mail.google.com/\nhttps://www.googleapis.com/auth/presentations\n----(When you're done, press <Enter> 2x)----"));
                                    readline = require('readline');
                                    scopes_1 = [];
                                    rl_1 = readline.createInterface({
                                        input: process.stdin,
                                        output: process.stdout,
                                        prompt: '',
                                    });
                                    rl_1.prompt();
                                    rl_1.on('line', function (cmd) {
                                        if (cmd === '') {
                                            rl_1.close();
                                        }
                                        else {
                                            scopes_1.push(cmd);
                                        }
                                    });
                                    rl_1.on('close', function () { return __awaiter(_this, void 0, void 0, function () {
                                        var numScopes;
                                        return __generator(this, function (_a) {
                                            switch (_a.label) {
                                                case 0: return [4 /*yield*/, manifest_1.addScopeToManifest(scopes_1)];
                                                case 1:
                                                    _a.sent();
                                                    numScopes = scopes_1.length;
                                                    console.log("Added " + numScopes + " " +
                                                        (pluralize('scope', numScopes) + " to your appsscript.json' oauthScopes"));
                                                    console.log('Please `clasp login --creds <file>` to log in with these new scopes.');
                                                    return [2 /*return*/];
                                            }
                                        });
                                    }); });
                                    // We probably don't need to show the unauth error
                                    // since we always prompt the user to fix this now.
                                    // logError(null, ERROR.UNAUTHENTICATED_LOCAL);
                                    break;
                                case 403:
                                    utils_1.logError(null, utils_1.ERROR.PERMISSION_DENIED_LOCAL);
                                    break;
                                case 404:
                                    utils_1.logError(null, utils_1.ERROR.EXECUTE_ENTITY_NOT_FOUND);
                                    break;
                                default:
                                    utils_1.logError(null, "(" + err_1.code + ") Error: " + err_1.message);
                            }
                        }
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    }
    var scriptId, devMode, _a, paramString, params;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, utils_1.checkIfOnline()];
            case 1:
                _b.sent();
                return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 2:
                _b.sent();
                return [4 /*yield*/, utils_1.getProjectSettings(true)];
            case 3:
                scriptId = (_b.sent()).scriptId;
                devMode = !cmd.nondev;
                _a = cmd.params, paramString = _a === void 0 ? '[]' : _a;
                IsValidJSONString(paramString);
                params = JSON.parse(paramString);
                // Ensures the manifest is correct for running a function.
                // The manifest must include:
                // "executionApi": {
                //   "access": "MYSELF"
                // }
                return [4 /*yield*/, manifest_1.isValidManifest()];
            case 4:
                // Ensures the manifest is correct for running a function.
                // The manifest must include:
                // "executionApi": {
                //   "access": "MYSELF"
                // }
                _b.sent();
                // TODO COMMENT THIS. This uses a method that gives a HTML 404.
                // await enableExecutionAPI();
                // Pushes the latest code if in dev mode.
                // We need to update the manifest before executing to:
                // - Ensure the execution API is enabled.
                // - Ensure we can run functions that were developed locally but not pushed.
                if (devMode) {
                    // TODO enable this once we can properly await pushFiles
                    // await pushFiles(true);
                }
                if (!!functionName) return [3 /*break*/, 6];
                return [4 /*yield*/, apiutils_1.getFunctionNames(auth_1.script, scriptId)];
            case 5:
                functionName = _b.sent();
                _b.label = 6;
            case 6: return [4 /*yield*/, runFunction(functionName, params)];
            case 7:
                _b.sent();
                return [2 /*return*/];
        }
    });
}); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicnVuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlCQTJLQTs7QUEzS0EsK0JBQTBCO0FBQzFCLHFDQUF1QztBQUN2Qyx3Q0FFcUI7QUFDckIsZ0NBSWlCO0FBQ2pCLHdDQUdxQjtBQUNyQixnQ0FBOEI7QUFDOUIsa0NBTWtCO0FBQ2xCOzs7Ozs7R0FNRztBQUNILG1CQUFlLFVBQU8sWUFBb0IsRUFBRSxHQUF3QztJQUNsRixTQUFTLGlCQUFpQixDQUFDLEdBQVc7UUFDcEMsSUFBSTtZQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDakI7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNkLE1BQU0sSUFBSSxLQUFLLENBQUMscUVBQXFFLENBQUMsQ0FBQztTQUN4RjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQStCRDs7O09BR0c7SUFDSCxTQUFlLFdBQVcsQ0FBQyxZQUFvQixFQUFFLE1BQWdCOzs7Ozs7Ozt3QkFFN0QsMEJBQTBCO3dCQUMxQixxQkFBTSx5QkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBQTs7d0JBRDlCLDBCQUEwQjt3QkFDMUIsU0FBOEIsQ0FBQzt3QkFDWCxxQkFBTSxxQkFBYyxFQUFFLEVBQUE7O3dCQUFwQyxXQUFXLEdBQUcsU0FBc0I7d0JBQzFDLGVBQU8sQ0FBQyxlQUFlLENBQUMsdUJBQXFCLFlBQWMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO3dCQUN6RCxxQkFBTSxXQUFXLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztnQ0FDeEMsUUFBUSxVQUFBO2dDQUNSLFdBQVcsRUFBRTtvQ0FDWCxRQUFRLEVBQUUsWUFBWTtvQ0FDdEIsVUFBVSxFQUFFLE1BQU07b0NBQ2xCLE9BQU8sU0FBQTtpQ0FDUjs2QkFDRixDQUFDLEVBQUE7O3dCQVBJLEdBQUcsR0FBRyxTQU9W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