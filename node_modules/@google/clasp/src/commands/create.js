"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var apis_1 = require("../apis");
var auth_1 = require("../auth");
var files_1 = require("../files");
var manifest_1 = require("../manifest");
var utils_1 = require("../utils");
var prompt = require('inquirer').prompt;
/**
 * Creates a new Apps Script project.
 * @param cmd.type {string} The type of the Apps Script project.
 * @param cmd.title {string} The title of the Apps Script project's file
 * @param cmd.parentId {string} The Drive ID of the G Suite doc this script is bound to.
 * @param cmd.rootDir {string} Specifies the local directory in which clasp will store your project files.
 *                    If not specified, clasp will default to the current directory.
 */
exports.default = (function (cmd) { return __awaiter(_this, void 0, void 0, function () {
    var _a, title, type, parentId, answers, DRIVE_FILE_MIMETYPES, driveFileType, driveFile, scriptId, err_1, res, createdScriptId, rootDir, files;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: 
            // Handle common errors.
            return [4 /*yield*/, utils_1.checkIfOnline()];
            case 1:
                // Handle common errors.
                _b.sent();
                if (files_1.hasProject())
                    return [2 /*return*/, utils_1.logError(null, utils_1.ERROR.FOLDER_EXISTS)];
                return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 2:
                _b.sent();
                title = cmd.title || utils_1.getDefaultProjectName();
                type = cmd.type;
                parentId = cmd.parentId;
                if (!(!parentId && !type)) return [3 /*break*/, 4];
                return [4 /*yield*/, prompt([{
                            type: 'list',
                            name: 'type',
                            message: utils_1.LOG.CLONE_SCRIPT_QUESTION,
                            // tslint:disable-next-line:no-any
                            choices: Object.keys(apis_1.SCRIPT_TYPES).map(function (key) { return apis_1.SCRIPT_TYPES[key]; }),
                        }])];
            case 3:
                answers = _b.sent();
                type = answers.type;
                _b.label = 4;
            case 4:
                DRIVE_FILE_MIMETYPES = (_a = {},
                    _a[apis_1.SCRIPT_TYPES.DOCS] = 'application/vnd.google-apps.document',
                    _a[apis_1.SCRIPT_TYPES.FORMS] = 'application/vnd.google-apps.form',
                    _a[apis_1.SCRIPT_TYPES.SHEETS] = 'application/vnd.google-apps.spreadsheet',
                    _a[apis_1.SCRIPT_TYPES.SLIDES] = 'application/vnd.google-apps.presentation',
                    _a);
                driveFileType = DRIVE_FILE_MIMETYPES[type];
                if (!driveFileType) return [3 /*break*/, 6];
                utils_1.spinner.setSpinnerTitle(utils_1.LOG.CREATE_DRIVE_FILE_START(type)).start();
                return [4 /*yield*/, auth_1.drive.files.create({
                        requestBody: {
                            mimeType: driveFileType,
                            name: title,
                        },
                    })];
            case 5:
                driveFile = _b.sent();
                parentId = driveFile.data.id || '';
                utils_1.spinner.stop(true);
                console.log(utils_1.LOG.CREATE_DRIVE_FILE_FINISH(type, parentId));
                _b.label = 6;
            case 6:
                // CLI Spinner
                utils_1.spinner.setSpinnerTitle(utils_1.LOG.CREATE_PROJECT_START(title)).start();
                _b.label = 7;
            case 7:
                _b.trys.push([7, 9, , 10]);
                return [4 /*yield*/, utils_1.getProjectSettings(true)];
            case 8:
                scriptId = (_b.sent()).scriptId;
                if (scriptId) {
                    utils_1.logError(null, utils_1.ERROR.NO_NESTED_PROJECTS);
                    process.exit(1);
                }
                return [3 /*break*/, 10];
            case 9:
                err_1 = _b.sent();
                return [3 /*break*/, 10];
            case 10: return [4 /*yield*/, auth_1.script.projects.create({
                    requestBody: {
                        title: title,
                        parentId: parentId,
                    },
                })];
            case 11:
                res = _b.sent();
                utils_1.spinner.stop(true);
                if (!(res.status !== 200)) return [3 /*break*/, 12];
                if (parentId) {
                    console.log(res.statusText, utils_1.ERROR.CREATE_WITH_PARENT);
                }
                utils_1.logError(res.statusText, utils_1.ERROR.CREATE);
                return [3 /*break*/, 14];
            case 12:
                createdScriptId = res.data.scriptId || '';
                console.log(utils_1.LOG.CREATE_PROJECT_FINISH(type, createdScriptId));
                rootDir = cmd.rootDir;
                utils_1.saveProject({
                    scriptId: createdScriptId,
                    rootDir: rootDir,
                }, false);
                if (!!manifest_1.manifestExists()) return [3 /*break*/, 14];
                return [4 /*yield*/, files_1.fetchProject(createdScriptId)];
            case 13:
                files = _b.sent();
                files_1.writeProjectFiles(files, rootDir); // fetches appsscript.json, o.w. `push` breaks
                _b.label = 14;
            case 14: return [2 /*return*/];
        }
    });
}); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlCQXNIQTs7QUF0SEEsZ0NBQXVDO0FBQ3ZDLGdDQUlpQjtBQUNqQixrQ0FJa0I7QUFDbEIsd0NBRXFCO0FBQ3JCLGtDQVNrQjtBQUNsQixJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsTUFBTSxDQUFDO0FBRTFDOzs7Ozs7O0dBT0c7QUFDSCxtQkFBZSxVQUFPLEdBQXVFOzs7OztZQUMzRix3QkFBd0I7WUFDeEIscUJBQU0scUJBQWEsRUFBRSxFQUFBOztnQkFEckIsd0JBQXdCO2dCQUN4QixTQUFxQixDQUFDO2dCQUN0QixJQUFJLGtCQUFVLEVBQUU7b0JBQUUsc0JBQU8sZ0JBQVEsQ0FBQyxJQUFJLEVBQUUsYUFBSyxDQUFDLGFBQWEsQ0FBQyxFQUFDO2dCQUM3RCxxQkFBTSx5QkFBa0IsRUFBRSxFQUFBOztnQkFBMUIsU0FBMEIsQ0FBQztnQkFHckIsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLElBQUksNkJBQXFCLEVBQUUsQ0FBQztnQkFDN0MsSUFBSSxHQUFLLEdBQUcsS0FBUixDQUFTO2dCQUNiLFFBQVEsR0FBSyxHQUFHLFNBQVIsQ0FBUztxQkFFbkIsQ0FBQSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQSxFQUFsQix3QkFBa0I7Z0JBQ0oscUJBQU0sTUFBTSxDQUFDLENBQUM7NEJBQzVCLElBQUksRUFBRSxNQUFNOzRCQUNaLElBQUksRUFBRSxNQUFNOzRCQUNaLE9BQU8sRUFBRSxXQUFHLENBQUMscUJBQXFCOzRCQUNsQyxrQ0FBa0M7NEJBQ2xDLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLG1CQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQyxHQUFXLElBQUssT0FBQSxtQkFBWSxDQUFDLEdBQVUs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