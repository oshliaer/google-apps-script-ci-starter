"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Manages dotfiles. There are 2 types of dotfiles:
 *
 * Global clasp auth settings:
 * - File: ~/.clasp.json
 * - Default credentials for clasp projects.
 *
 * Local clasp auth settings:
 * - File: .clasp.json
 * - Requires `clasp login --creds creds.json`
 *
 * This should be the only file that uses DOTFILE.
 */
var fs = require("fs");
var os = require("os");
var path = require("path");
var dotf = require('dotf');
var read = require('read-file');
var findParentDir = require('find-parent-dir');
var splitLines = require('split-lines');
// TEMP CIRCULAR DEPS, TODO REMOVE
// import { PROJECT_NAME } from './utils';
var PROJECT_NAME = 'clasp';
// Dotfile names
exports.DOT = {
    /**
     * This dotfile stores information about ignoring files on `push`. Like .gitignore.
     */
    IGNORE: {
        DIR: '~',
        NAME: PROJECT_NAME + "ignore",
        PATH: "." + PROJECT_NAME + "ignore",
    },
    /**
     * This dotfile saves clasp project information, local to project directory.
     */
    PROJECT: {
        DIR: path.join('.', '/'),
        NAME: PROJECT_NAME + ".json",
        PATH: "." + PROJECT_NAME + ".json",
    },
    /**
     * This dotfile saves auth information. Should never be committed.
     * There are 2 types: personal & global:
     * - Global: In the $HOME directory.
     * - Personal: In the local directory.
     * @see {ClaspToken}
     */
    RC: {
        DIR: '~',
        LOCAL_DIR: './',
        NAME: PROJECT_NAME + "rc.json",
        LOCAL_PATH: "." + PROJECT_NAME + "rc.json",
        PATH: path.join('~', "." + PROJECT_NAME + "rc.json"),
        ABSOLUTE_PATH: path.join(os.homedir(), "." + PROJECT_NAME + "rc.json"),
        ABSOLUTE_LOCAL_PATH: path.join('.', "." + PROJECT_NAME + "rc.json"),
    },
};
// Methods for retrieving dotfiles.
exports.DOTFILE = {
    /**
     * Reads DOT.IGNORE.PATH to get a glob pattern of ignored paths.
     * @return {Promise<string[]>} A list of file glob patterns
     */
    IGNORE: function () {
        var projectDirectory = findParentDir.sync(process.cwd(), exports.DOT.PROJECT.PATH) || exports.DOT.PROJECT.DIR;
        return new Promise(function (res, rej) {
            if (fs.existsSync(path.join(projectDirectory, exports.DOT.IGNORE.PATH))) {
                var buffer = read.sync(exports.DOT.IGNORE.PATH, 'utf8');
                res(splitLines(buffer).filter(function (name) { return name; }));
            }
            else {
                res([]);
            }
        });
    },
    /**
     * Gets the closest DOT.PROJECT.NAME in the parent directory of the directory
     * that the command was run in.
     * @return {dotf} A dotf with that dotfile. Null if there is no file
     */
    PROJECT: function () {
        var projectDirectory = findParentDir.sync(process.cwd(), exports.DOT.PROJECT.PATH) || exports.DOT.PROJECT.DIR;
        return dotf(projectDirectory, exports.DOT.PROJECT.NAME);
    },
    // Stores {ClaspCredentials}
    RC: dotf(exports.DOT.RC.DIR, exports.DOT.RC.NAME),
    // Stores {ClaspCredentials}
    RC_LOCAL: function () {
        var localDirectory = findParentDir.sync(process.cwd(), exports.DOT.PROJECT.PATH) || exports.DOT.RC.LOCAL_DIR;
        return dotf(localDirectory, exports.DOT.RC.NAME);
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG90ZmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRvdGZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7O0dBWUc7QUFDSCx1QkFBeUI7QUFDekIsdUJBQXlCO0FBQ3pCLDJCQUE2QjtBQUk3QixJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDN0IsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2xDLElBQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ2pELElBQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUUxQyxrQ0FBa0M7QUFDbEMsMENBQTBDO0FBQzFDLElBQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQztBQVU3QixnQkFBZ0I7QUFDSCxRQUFBLEdBQUcsR0FBRztJQUNqQjs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLEdBQUcsRUFBRSxHQUFHO1FBQ1IsSUFBSSxFQUFLLFlBQVksV0FBUTtRQUM3QixJQUFJLEVBQUUsTUFBSSxZQUFZLFdBQVE7S0FDL0I7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7UUFDeEIsSUFBSSxFQUFLLFlBQVksVUFBTztRQUM1QixJQUFJLEVBQUUsTUFBSSxZQUFZLFVBQU87S0FDOUI7SUFDRDs7Ozs7O09BTUc7SUFDSCxFQUFFLEVBQUU7UUFDRixHQUFHLEVBQUUsR0FBRztRQUNSLFNBQVMsRUFBRSxJQUFJO1FBQ2YsSUFBSSxFQUFLLFlBQVksWUFBUztRQUM5QixVQUFVLEVBQUUsTUFBSSxZQUFZLFlBQVM7UUFDckMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE1BQUksWUFBWSxZQUFTLENBQUM7UUFDL0MsYUFBYSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLE1BQUksWUFBWSxZQUFTLENBQUM7UUFDakUsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsTUFBSSxZQUFZLFlBQVMsQ0FBQztLQUMvRDtDQUNGLENBQUM7QUFFRixtQ0FBbUM7QUFDdEIsUUFBQSxPQUFPLEdBQUc7SUFDckI7OztPQUdHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sSUFBTSxnQkFBZ0IsR0FBVyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxXQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLFdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ3hHLE9BQU8sSUFBSSxPQUFPLENBQVcsVUFBQyxHQUFHLEVBQUUsR0FBRztZQUNwQyxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxXQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUU7Z0JBQy9ELElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7Z0JBQ2xELEdBQUcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQUMsSUFBWSxJQUFLLE9BQUEsSUFBSSxFQUFKLENBQUksQ0FBQyxDQUFDLENBQUM7YUFDeEQ7aUJBQU07Z0JBQ0wsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ1Q7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDRDs7OztPQUlHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsSUFBTSxnQkFBZ0IsR0FBVyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxXQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLFdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ3hHLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixFQUFFLFdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNELDRCQUE0QjtJQUM1QixFQUFFLEVBQUUsSUFBSSxDQUFDLFdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLFdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO0lBQ2pDLDRCQUE0QjtJQUM1QixRQUFRLEVBQUU7UUFDUixJQUFNLGNBQWMsR0FBVyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxXQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLFdBQUcsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBQ3ZHLE9BQU8sSUFBSSxDQUFDLGNBQWMsRUFBRSxXQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUM7Q0FDRixDQUFDIn0=