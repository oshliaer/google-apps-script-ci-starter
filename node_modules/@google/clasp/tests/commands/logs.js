"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var mocha_1 = require("mocha");
var spawnSync = require('child_process').spawnSync;
var constants_1 = require("../constants");
var functions_1 = require("../functions");
var utils_1 = require("../../src/utils");
mocha_1.describe('Test clasp logs setup', function () {
    before(functions_1.setupWithoutGCPProject);
    mocha_1.it('should prompt for logs setup', function () {
        var result = spawnSync(constants_1.CLASP, ['logs'], { encoding: 'utf8' });
        chai_1.expect(result.status).to.equal(0);
        chai_1.expect(result.stdout).to.contain("" + utils_1.LOG.ASK_PROJECT_ID);
    });
    mocha_1.it('should prompt for logs setup', function () {
        var result = spawnSync(constants_1.CLASP, ['logs', '--setup'], { encoding: 'utf8' });
        chai_1.expect(result.status).to.equal(0);
        chai_1.expect(result.stdout).to.contain("" + utils_1.LOG.ASK_PROJECT_ID);
    });
    after(functions_1.cleanup);
});
mocha_1.describe('Test clasp logs function', function () {
    before(functions_1.setup);
    mocha_1.it('should get some logs', function () {
        var result = spawnSync(constants_1.CLASP, ['logs'], { encoding: 'utf8' });
        chai_1.expect(result.status).to.equal(0);
        // Example log line:
        // tslint:disable-next-line:max-line-length
        // NOTICE               2019-02-26T05:10:20.658Z google.api.serviceusage.v1.ServiceUsage.EnableService Setting up StackDriver Logging.
        // ... we'll just expect there to be *some* stdout.
        chai_1.expect(result.stdout).lengthOf.greaterThan(10);
    });
    after(functions_1.cleanup);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxvZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2QkFBOEI7QUFDOUIsK0JBQXFDO0FBQzdCLElBQUEsOENBQVMsQ0FBOEI7QUFFL0MsMENBQXFDO0FBRXJDLDBDQUlzQjtBQUV0Qix5Q0FBc0M7QUFFdEMsZ0JBQVEsQ0FBQyx1QkFBdUIsRUFBRTtJQUNoQyxNQUFNLENBQUMsa0NBQXNCLENBQUMsQ0FBQztJQUMvQixVQUFFLENBQUMsOEJBQThCLEVBQUU7UUFDakMsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUN0QixpQkFBSyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ3RDLENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEMsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUcsV0FBRyxDQUFDLGNBQWdCLENBQUMsQ0FBQztJQUM1RCxDQUFDLENBQUMsQ0FBQztJQUNILFVBQUUsQ0FBQyw4QkFBOEIsRUFBRTtRQUNqQyxJQUFNLE1BQU0sR0FBRyxTQUFTLENBQ3RCLGlCQUFLLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ2pELENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEMsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUcsV0FBRyxDQUFDLGNBQWdCLENBQUMsQ0FBQztJQUM1RCxDQUFDLENBQUMsQ0FBQztJQUNILEtBQUssQ0FBQyxtQkFBTyxDQUFDLENBQUM7QUFDakIsQ0FBQyxDQUFDLENBQUM7QUFFSCxnQkFBUSxDQUFDLDBCQUEwQixFQUFFO0lBQ25DLE1BQU0sQ0FBQyxpQkFBSyxDQUFDLENBQUM7SUFDZCxVQUFFLENBQUMsc0JBQXNCLEVBQUU7UUFDekIsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUN0QixpQkFBSyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ3RDLENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakMsb0JBQW9CO1FBQ3BCLDJDQUEyQztRQUMzQyxzSUFBc0k7UUFDdEksbURBQW1EO1FBQ3BELGFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqRCxDQUFDLENBQUMsQ0FBQztJQUNILEtBQUssQ0FBQyxtQkFBTyxDQUFDLENBQUM7QUFDakIsQ0FBQyxDQUFDLENBQUMifQ==