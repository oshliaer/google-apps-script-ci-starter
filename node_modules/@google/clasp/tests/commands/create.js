"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var mocha_1 = require("mocha");
var fs = require("fs-extra");
var spawnSync = require('child_process').spawnSync;
var constants_1 = require("../constants");
var functions_1 = require("../functions");
var utils_1 = require("../../src/utils");
mocha_1.describe('Test clasp create function', function () {
    before(functions_1.setup);
    mocha_1.it('should prompt for a project name correctly', function () {
        spawnSync('rm', ['.clasp.json']);
        var result = spawnSync(constants_1.CLASP, ['create'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.contain(utils_1.LOG.CLONE_SCRIPT_QUESTION);
    });
    mocha_1.it('should not prompt for project name', function () {
        fs.writeFileSync('.clasp.json', '');
        var result = spawnSync(constants_1.CLASP, ['create'], { encoding: 'utf8' });
        chai_1.expect(result.stderr).to.contain('Project file (.clasp.json) already exists.');
    });
    after(functions_1.cleanup);
});
mocha_1.describe.skip('Test clasp create <title> function', function () {
    before(functions_1.setup);
    mocha_1.it('should create a new project named <title> correctly', function () {
        spawnSync('rm', ['.clasp.json']);
        var result = spawnSync(constants_1.CLASP, ['create', 'myTitle'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.contain('Created new script: https://script.google.com/d/');
        chai_1.expect(result.status).to.equal(0);
    });
});
mocha_1.describe('Test clasp create <parentId> function', function () {
    before(functions_1.setup);
    mocha_1.it('should not prompt for script types with parentId', function () {
        spawnSync('rm', ['.clasp.json']);
        var result = spawnSync(constants_1.CLASP, ['create', '--parentId', '"1D_Gxyv*****************************NXO7o"'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.not.contain(utils_1.LOG.CLONE_SCRIPT_QUESTION);
        chai_1.expect(result.stderr).to.contain('Request contains an invalid argument.');
    });
    after(functions_1.cleanup);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkJBQThCO0FBQzlCLCtCQUFxQztBQUNyQyw2QkFBK0I7QUFDdkIsSUFBQSw4Q0FBUyxDQUE4QjtBQUUvQywwQ0FFc0I7QUFFdEIsMENBR3NCO0FBRXRCLHlDQUFzQztBQUV0QyxnQkFBUSxDQUFDLDRCQUE0QixFQUFFO0lBQ3JDLE1BQU0sQ0FBQyxpQkFBSyxDQUFDLENBQUM7SUFDZCxVQUFFLENBQUMsNENBQTRDLEVBQUU7UUFDL0MsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDakMsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUN0QixpQkFBSyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ3hDLENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDOUQsQ0FBQyxDQUFDLENBQUM7SUFDSCxVQUFFLENBQUMsb0NBQW9DLEVBQUU7UUFDdkMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDcEMsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUN0QixpQkFBSyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ3hDLENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsNENBQTRDLENBQUMsQ0FBQztJQUNqRixDQUFDLENBQUMsQ0FBQztJQUNILEtBQUssQ0FBQyxtQkFBTyxDQUFDLENBQUM7QUFDakIsQ0FBQyxDQUFDLENBQUM7QUFFSCxnQkFBUSxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsRUFBRTtJQUNsRCxNQUFNLENBQUMsaUJBQUssQ0FBQyxDQUFDO0lBQ2QsVUFBRSxDQUFDLHFEQUFxRCxFQUFFO1FBQ3hELFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLElBQU0sTUFBTSxHQUFHLFNBQVMsQ0FDdEIsaUJBQUssRUFBRSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FDbkQsQ0FBQztRQUNGLGFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO1FBQ3JGLGFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDO0FBRUgsZ0JBQVEsQ0FBQyx1Q0FBdUMsRUFBRTtJQUNoRCxNQUFNLENBQUMsaUJBQUssQ0FBQyxDQUFDO0lBQ2QsVUFBRSxDQUFDLGtEQUFrRCxFQUFFO1FBQ3JELFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLElBQU0sTUFBTSxHQUFHLFNBQVMsQ0FDdEIsaUJBQUssRUFBRSxDQUFDLFFBQVEsRUFBRSxZQUFZLEVBQUUsNkNBQTZDLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FDckcsQ0FBQztRQUNGLGFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDaEUsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLHVDQUF1QyxDQUFDLENBQUM7SUFDNUUsQ0FBQyxDQUFDLENBQUM7SUFDSCxLQUFLLENBQUMsbUJBQU8sQ0FBQyxDQUFDO0FBQ2pCLENBQUMsQ0FBQyxDQUFDIn0=