"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var fs = require("fs-extra");
var mocha_1 = require("mocha");
var spawnSync = require('child_process').spawnSync;
var constants_1 = require("../constants");
var functions_1 = require("../functions");
mocha_1.describe('Test clasp push function', function () {
    before(functions_1.setup);
    mocha_1.it('should push local project correctly', function () {
        fs.writeFileSync('Code.js', constants_1.TEST_CODE_JS);
        fs.writeFileSync('.claspignore', '**/**\n!Code.js\n!appsscript.json');
        var result = spawnSync(constants_1.CLASP, ['push'], { encoding: 'utf8', input: 'y' });
        chai_1.expect(result.stdout).to.contain('Pushed');
        chai_1.expect(result.stdout).to.contain('files.');
        chai_1.expect(result.status).to.equal(0);
    });
    mocha_1.it.skip('should return non-0 exit code when push failed', function () {
        fs.writeFileSync('.claspignore', '**/**\n!Code.js\n!appsscript.json\n!unexpected_file');
        fs.writeFileSync('unexpected_file', constants_1.TEST_CODE_JS);
        var result = spawnSync(constants_1.CLASP, ['push'], { encoding: 'utf8', stdin: 'y' });
        chai_1.expect(result.stderr).to.contain('Invalid value at');
        chai_1.expect(result.stderr).to.contain('UNEXPECTED_FILE');
        chai_1.expect(result.stderr).to.contain('Files to push were:');
        chai_1.expect(result.status).to.equal(1);
    });
    after(functions_1.cleanup);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInB1c2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2QkFBOEI7QUFDOUIsNkJBQStCO0FBQy9CLCtCQUFxQztBQUM3QixJQUFBLDhDQUFTLENBQThCO0FBRS9DLDBDQUdzQjtBQUV0QiwwQ0FHc0I7QUFFdEIsZ0JBQVEsQ0FBQywwQkFBMEIsRUFBRTtJQUNuQyxNQUFNLENBQUMsaUJBQUssQ0FBQyxDQUFDO0lBQ2QsVUFBRSxDQUFDLHFDQUFxQyxFQUFFO1FBQ3hDLEVBQUUsQ0FBQyxhQUFhLENBQUMsU0FBUyxFQUFFLHdCQUFZLENBQUMsQ0FBQztRQUMxQyxFQUFFLENBQUMsYUFBYSxDQUFDLGNBQWMsRUFBRSxtQ0FBbUMsQ0FBQyxDQUFDO1FBQ3RFLElBQU0sTUFBTSxHQUFHLFNBQVMsQ0FDdEIsaUJBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQ2xELENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0MsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzNDLGFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLENBQUMsQ0FBQztJQUNILFVBQUUsQ0FBQyxJQUFJLENBQUMsZ0RBQWdELEVBQUU7UUFDeEQsRUFBRSxDQUFDLGFBQWEsQ0FBQyxjQUFjLEVBQUUscURBQXFELENBQUMsQ0FBQztRQUN4RixFQUFFLENBQUMsYUFBYSxDQUFDLGlCQUFpQixFQUFFLHdCQUFZLENBQUMsQ0FBQztRQUNsRCxJQUFNLE1BQU0sR0FBRyxTQUFTLENBQ3RCLGlCQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBQyxDQUNqRCxDQUFDO1FBQ0YsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDckQsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDcEQsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDeEQsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBQ0gsS0FBSyxDQUFDLG1CQUFPLENBQUMsQ0FBQztBQUNqQixDQUFDLENBQUMsQ0FBQyJ9